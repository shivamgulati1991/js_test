<html>
  <head>
  <title>Effcal</title>
  <meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">

<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>
<script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js"></script>

	<script>
	  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
	  ga('create', 'UA-75978547-1', 'auto');
	  ga('send', 'pageview');
	</script>
    <script type="text/javascript">
      // Your Client ID can be retrieved from your project in the Google
      // Developer Console, https://console.developers.google.com
      var CLIENT_ID = '603360305177-8sijq4vs3cpisl709pjmd600d90lv7jm.apps.googleusercontent.com';
      var SCOPES = ["https://www.googleapis.com/auth/calendar"];
      /**
       * Check if current user has authorized this application.
       */
      function checkAuth() {
        gapi.auth.authorize(
          {
            'client_id': CLIENT_ID,
            'scope': SCOPES.join(' '),
            'immediate': true
          }, handleAuthResult);
      }
      /**
       * Handle response from authorization server.
       *
       * @param {Object} authResult Authorization result.
       */
      function handleAuthResult(authResult) {
        var authorizeDiv = document.getElementById('authorize-div');
        if (authResult && !authResult.error) {
          // Hide auth UI, then load client library.
          authorizeDiv.style.display = 'none';
          loadCalendarApi();
        } else {
          // Show auth UI, allowing the user to initiate authorization by
          // clicking authorize button.
          authorizeDiv.style.display = 'inline';
        }
      }
      /**
       * Initiate auth flow in response to user clicking authorize button.
       *
       * @param {Event} event Button click event.
       */
      function handleAuthClick(event) {
	console.log("Google authentication");
	    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
	  ga('send', {
	  hitType: 'event',
	  eventCategory: 'Google Login',
	  eventAction: 'Click'
	});
        gapi.auth.authorize(
          {client_id: CLIENT_ID, scope: SCOPES, immediate: false},
          handleAuthResult);
        return false;
      }
      /**
       * Load Google Calendar client library. List upcoming events
       * once client library is loaded.
       */
      function loadCalendarApi() {
	console.log("Loading Google events..");
        gapi.client.load('calendar', 'v3', listUpcomingEvents);
      }
      /**
       * Print the summary and start datetime/date of the next ten events in
       * the authorized user's calendar. If no events are found an
       * appropriate message is printed.
       */
      function listUpcomingEvents() {
	    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
	  ga('send', {
	  hitType: 'event',
	  eventCategory: 'ShowGoogleEvents',
	  eventAction: 'Click'
	});
		console.log("Show Google events");
        var request = gapi.client.calendar.events.list({
          'calendarId': 'primary',
          'timeMin': (new Date()).toISOString(),
          'showDeleted': false,
          'singleEvents': true,
          'maxResults': 5,
          'orderBy': 'startTime'
        });
        request.execute(function(resp) {
          var events = resp.items;
         // appendPre('Upcoming events:');
	document.getElementById('out').innerHTML='<h3>Upcoming events</h3>';
	var tableBody=	'<h3>Upcoming events on your Google Calendar</h3><div class="CSSTableGenerator"><table border=1 cellspacing=2><tr><th>Event</th><th>Start Date and Time</th><th>End Date and Time</th><th>Creator</th></tr>';
          if (events.length > 0) {
            for (i = 0; i < events.length; i++) {
		console.log("Upcoming event: "+i);
              var event = events[i];
              var when = event.start.dateTime;
              var when1 = event.end.dateTime;
	      var creator=event.creator.email;
              if (!when) {
                when = event.start.date;
              }
             //appendPre(event.summary + ' (' + when + ')')
	tableBody+='<tr><td>'+event.summary + '</td><td> (' + when + ')</td>'+'<td>'+when1+'</td><td>'+creator+'</td></tr>';
            }
          } else {
            //appendPre('No upcoming events found.');
	tableBody+='No upcoming events';
          }
	tableBody+='</table></div><br><br>';
	document.getElementById('out').innerHTML=tableBody;	
        });
      }
      /**
       * Append a pre element to the body containing the given message
       * as its text node.
       *
       * @param {string} message Text to be placed in pre element.
       */
      function appendPre(message) {
        var pre = document.getElementById('output');
        var textContent = document.createTextNode(message + '\n');
        pre.appendChild(textContent);
      }
    </script>
	<script src="https://apis.google.com/js/client.js?onload=checkAuth"></script>
	<script src="//js.live.net/v5.0/wl.js"></script>

<script>
var OUTLOOK_APP_CLIENT_ID = "a70d0bd4-67a2-42fb-b6b4-0bc587d30934";
var OUTLOOK_REDIRECT_URL = "https://effcal.herokuapp.com/";
WL.Event.subscribe("auth.login", onLogin);
WL.Event.subscribe("auth.logout", function(){document.getElementById("infoLabel").innerText = "";});
var session = WL.getSession();
if (session) {
	document.getElementById("infoLabel").innerText ="You are already signed in!";
} else {
    WL.login({ scope: "wl.signin" });
}
            WL.init({
                client_id: OUTLOOK_APP_CLIENT_ID,
                redirect_uri: OUTLOOK_REDIRECT_URL,
                scope: ["wl.signin", "wl.basic","wl.calendars"],
                response_type: "token"
            });
            WL.ui({
                name: "signin",
                element: "signin"
            });
            function onLogin () {
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('send', {
  hitType: 'event',
  eventCategory: 'Outlook Login',
  eventAction: 'Click'
});
            	var session = WL.getSession();
                if (!session.error) {
                   WL.api({
                      path: "me",
                      method: "GET"
                   }).then(
                      function (response) {
			    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
			  ga('send', {
			  hitType: 'event',
			  eventCategory: 'SeeOutlookEvents',
			  eventAction: 'Click'
			});
                                document.getElementById("infoLabel").innerText =
                                    "Welcome, " +
                                    response.first_name + " " + 
                                    response.last_name + "!\n" + 
                                    "Your list of events are: \n" +
                                    "Test Event 1: start: 2016-04-02 06:00:00 end:2016-04-02 14:00:00 \n" +
                                    "Test Event 2: start: 2016-04-03 06:00:00 end:2016-04-03 14:00:00\n" +
                                    "Test Event 3: start: 2016-04-04 06:00:00 end:2016-04-04 14:00:00\n" ;
                               
                      },
                      function (responseFailed) {
                                document.getElementById("infoLabel").innerText =
                                    "Error calling API: " + responseFailed.error.message;
                      }
                  );
                }
                else {
                     document.getElementById("infoLabel").innerText =
                             "Error signing in: " + session.error_description;
                }
          }
       </script>
    
<style>
   /* Set height of the grid so .sidenav can be 100% (adjust if needed) */
    .row.content {height: 1500px}
    
    /* Set gray background color and 100% height */
    .sidenav {
      background-color: #f1f1f1;
      height: 100%;
    }
    
    /* Set black background color, white text and some padding */
    footer {
      background-color: #555;
      color: white;
      padding: 15px;
    }
    
    /* On small screens, set height to 'auto' for sidenav and grid */
    @media screen and (max-width: 767px) {
      .sidenav {
        height: auto;
        padding: 15px;
      }
      .row.content {height: auto;} 
    }
</style>

  </head>
  <body>

<div class="container-fluid">
	<h1>Effcal</h1><br>
	<div class="row content">
		<div class="col-sm-3 sidenav"><br> <br>
			<ul class="nav nav-pills nav-stacked">
			<li class="active"><a href="#firstcontent">Google connect</a></li><br>
			<li class="active"><a href="#secondcontent">Facebook connect</a></li><br>
		    <li class="active"><a href="#thirdcontent">Outlook connect</a></li><br>
			</ul><br>
		</div>
		<div class="col-sm-9">
		<span><h2>Login to see your upcoming events</h2></span>
			<div id="firstcontent"><hr>
				<h2>Google events</h2>
				<div id="authorize-div" style="display: none"><br />
					<button style="display: inline-block" id="authorize-button" onclick="handleAuthClick(event)">
					<img src="images/Google.png" height="22" width="22" style="float: left; margin-right: 0.5em" />Sign in to Google
					</button>
				</div>
			</div><hr>
			<div id="secondcontent">
				<h2>Facebook events</h2>
				<fb:login-button scope="public_profile,email" onlogin="checkLoginState();"></fb:login-button>
				<div id="status"></div><br />
				<input type="button" value="See FB events" name="check" onClick="getList();" />
				<div id="eventOut">Select Event Info to fetch details</div>
				</div><hr>
				
			<div id="thirdcontent">
				<h2>Outlook events</h2>
				<div id="signin"></div><br /> 
				<label id="infoLabel"></label>
				</div>
			</div>
			<script type="text/javascript" src="outlook.js"></script><hr>


		</div>
	

    <div id="clearingdiv"></div>
</div>

    <div id="authorize-div" style="display: none">
      <span>Authorize access to Google Calendar API</span>
      <!--Button for the user to click to initiate auth sequence -->
      <button id="authorize-button" onclick="handleAuthClick(event)">
        Authorize
      </button>
    </div>
    <pre id="output"></pre>
    <div id="out"></div>


  
  
  
  
  
  
  
  
  
  
  
  
<div id="page">
    <h1>Effcal</h1>
    <div id="maincontent">
        <div id="firstcontent">
	    <div id="authorize-div" style="display: none">
      <span><h2>Login to see your upcoming events</h2></span>
      <!--Button for the user to click to initiate auth sequence --><br/>
      <button style="display:inline-block" id="authorize-button" onclick="handleAuthClick(event)">
	<img src="/images/Google.png" height="42" width="42" style="float:left;margin-right:0.5em"/>Sign in to Google
      </button>
    </div>
    <pre id="output"></pre>
    <div id="out"></div>
    <!--<input type="button" value="Create an event" onClick="createEvent();"/><br/><br/><br/>-->
	</div>
		<div id="secondcontent">
		<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
		</fb:login-button>
		<div id="status">
		</div><br/>

		<!--<input type="button" value="getPermit" name="permission" onClick="getPermissions();"/>-->
		<h3>Facebook events</h3><input type="button" value="See FB events" name="check" onClick="getList();"/>
		<div id="eventOut">Select Event Info to fetch details</div>
	</div>
	<div class="nav navbar-nav navbar-right" style="padding-top: 15px;">
	   <h3>Outlook events</h3> <div id="thirdcontent">
		<div id="signin"></div>
		<br />
		<label id="infoLabel"></label>
		</div></div>
    </div>

    <div id="menuleftcontent">
        <ul id="menu">
            <li><a href="#firstcontent"><h4>Google connect</h4></a></li>
            <li><a href="#secondcontent"><h4>Facebook connect</h4></a></li>
            <li><a href="#thirdcontent"><h4>Outlook connect</h4></a></li>
        </ul>
    </div>
    <div id="clearingdiv"></div>
</div>

    <div id="authorize-div" style="display: none">
      <span>Authorize access to Google Calendar API</span>
      <!--Button for the user to click to initiate auth sequence -->
      <button id="authorize-button" onclick="handleAuthClick(event)">
        Authorize
      </button>
    </div>
    <pre id="output"></pre>
    <div id="out"></div>

<script>
  window.fbAsyncInit = function() {
  FB.init({
    appId      : '825565214222595',
    cookie     : true,  // enable cookies to allow the server to access 
                        // the session
    xfbml      : true,  // parse social plugins on this page
    version    : 'v2.5' // use graph api version 2.5
  });
  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });
  };
  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = '<br>Please log ' +
        'into Facebook.';
    }
  }
  // Login status check
  function checkLoginState() {
		 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
	  ga('send', {
	  hitType: 'event',
	  eventCategory: 'Facebook login',
	  eventAction: 'Click'
	});
		console.log("Facebook login");
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }
  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }
</script>


<!--<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
</fb:login-button>
<div id="status">
</div>
-->

<script>
function getList(){
	console.log("See Facebook appointments");
	    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
	    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
	    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
	    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
	  ga('send', {
	  hitType: 'event',
	  eventCategory: 'SeeFacebookEvents',
	  eventAction: 'Click'
	});
FB.api(
    "/780001448800563",
    function (response) {
      if (response && !response.error) {
document.getElementById('eventOut').innerHTML='<br>Event name: '+JSON.stringify(response.name)+'<br>';
document.getElementById('eventOut').innerHTML+='Event location: '+JSON.stringify(response.description)+'<br>';
document.getElementById('eventOut').innerHTML+='Event time: '+JSON.stringify(response.start_time);
      }
    }
);
FB.api(
    "/573084389517665",
    function (response) {
      if (response && !response.error) {
document.getElementById('eventOut').innerHTML+='<br><br>Event name: '+JSON.stringify(response.name)+'<br>';
document.getElementById('eventOut').innerHTML+='Event location: '+JSON.stringify(response.description)+'<br>';
document.getElementById('eventOut').innerHTML+='Event time: '+JSON.stringify(response.start_time);
      }
    }
);
}
function getPermissions(){
FB.api(
    "/me/friends/",
    function (response) {
      if (response && !response.error) {
 alert(JSON.stringify(response));
document.getElementById('eventOut').innerHTML=JSON.stringify(response);
      }
    }
);
}
</script>


	<footer class="container-fluid">
		<p>Footer Text</p>
	</footer>

  </body>
</html>
